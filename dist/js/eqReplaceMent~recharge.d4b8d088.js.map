{"version":3,"sources":["webpack:///./node_modules/vant/es/area/index.js","webpack:///./node_modules/@babel/runtime/helpers/builtin/es6/asyncToGenerator.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/vant/es/mixins/picker.js","webpack:///./node_modules/vant/es/area/style/index.js","webpack:///./node_modules/vant/es/utils/deep-clone.js","webpack:///./node_modules/vant/es/picker/PickerColumn.js","webpack:///./node_modules/vant/es/picker/index.js"],"names":["_utils_create__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_picker__WEBPACK_IMPORTED_MODULE_1__","_mixins_picker__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","Object","render","_vm","this","_h","$createElement","_c","_self","ref","class","b","attrs","show-toolbar","value-key","title","loading","columns","displayColumns","item-height","itemHeight","visible-item-count","visibleItemCount","on","change","onChange","confirm","$event","$emit","cancel","name","mixins","components","Picker","props","value","String","areaList","type","default","columnsNum","Number","data","code","values","computed","province","province_list","city","city_list","county","county_list","slice","watch","setValues","deep","handler","mounted","methods","getList","result","list","keys","map","listCode","filter","item","indexOf","getIndex","compareNum","i","length","picker","index","$refs","setColumnValues","setIndexes","getValues","getArea","area","country","names","reset","_asyncToGenerator","fn","self","args","arguments","Promise","resolve","reject","gen","apply","step","key","arg","info","error","done","then","_next","_throw","err","d","global","undefined","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","module","runtime","regeneratorRuntime","exports","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","call","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","toString","object","push","reverse","pop","Context","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","stop","rootEntry","rootRecord","completion","rval","dispatchException","exception","context","handle","loc","caught","record","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","obj","invoke","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegateResult","maybeInvokeDelegate","return","TypeError","pushTryEntry","locs","iteratorMethod","Function","Boolean","showToolbar","cancelButtonText","confirmButtonText","deepClone","Array","isArray","deep_assign","DEFAULT_DURATION","PickerColumn","className","style","columnStyle","touchstart","onTouchStart","touchmove","preventDefault","onTouchMove","touchend","onTouchEnd","touchcancel","wrapperStyle","_l","options","option","staticClass","disabled","isDisabled","selected","currentIndex","optionStyle","domProps","innerHTML","_s","getOptionText","click","setIndex","valueKey","defaultIndex","initialOptions","startY","offset","duration","startOffset","created","$parent","children","destroyed","splice","count","baseOffset","height","transition","transform","lineHeight","event","touches","clientY","deltaY","utils","Math","round","adjustIndex","_i","userAction","setValue","getValue","_t","emit","_v","$t","textContent","_e","columnsStyle","simple","initial-options","class-name","default-index","frameStyle","setColumns","_this","column","getColumnValue","getColumnIndex","getIndexes","columnIndex","getColumn","setColumnValue","setColumnIndex","optionIndex","getColumnValues","JSON","stringify","child","_this2","indexes","_this3"],"mappings":"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","file":"js/eqReplaceMent~recharge.d4b8d088.js","sourcesContent":["import create from '../utils/create';\nimport Picker from '../picker';\nimport PickerMixin from '../mixins/picker';\nexport default create({\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('picker', {\n      ref: \"picker\",\n      class: _vm.b(),\n      attrs: {\n        \"show-toolbar\": \"\",\n        \"value-key\": \"name\",\n        \"title\": _vm.title,\n        \"loading\": _vm.loading,\n        \"columns\": _vm.displayColumns,\n        \"item-height\": _vm.itemHeight,\n        \"visible-item-count\": _vm.visibleItemCount\n      },\n      on: {\n        \"change\": _vm.onChange,\n        \"confirm\": function confirm($event) {\n          _vm.$emit('confirm', $event);\n        },\n        \"cancel\": function cancel($event) {\n          _vm.$emit('cancel', $event);\n        }\n      }\n    });\n  },\n  name: 'area',\n  mixins: [PickerMixin],\n  components: {\n    Picker: Picker\n  },\n  props: {\n    value: String,\n    areaList: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    columnsNum: {\n      type: [String, Number],\n      default: 3\n    }\n  },\n  data: function data() {\n    return {\n      code: this.value,\n      columns: [{\n        values: []\n      }, {\n        values: []\n      }, {\n        values: []\n      }]\n    };\n  },\n  computed: {\n    province: function province() {\n      return this.areaList.province_list || {};\n    },\n    city: function city() {\n      return this.areaList.city_list || {};\n    },\n    county: function county() {\n      return this.areaList.county_list || {};\n    },\n    displayColumns: function displayColumns() {\n      return this.columns.slice(0, +this.columnsNum);\n    }\n  },\n  watch: {\n    value: function value() {\n      this.code = this.value;\n      this.setValues();\n    },\n    areaList: {\n      deep: true,\n      handler: function handler() {\n        this.setValues();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.setValues();\n  },\n  methods: {\n    // get list by code\n    getList: function getList(type, code) {\n      var result = [];\n\n      if (type !== 'province' && !code) {\n        return result;\n      }\n\n      var list = this[type];\n      result = Object.keys(list).map(function (listCode) {\n        return {\n          code: listCode,\n          name: list[listCode]\n        };\n      });\n\n      if (code) {\n        // oversea code\n        if (code[0] === '9' && type === 'city') {\n          code = '9';\n        }\n\n        result = result.filter(function (item) {\n          return item.code.indexOf(code) === 0;\n        });\n      }\n\n      return result;\n    },\n    // get index by code\n    getIndex: function getIndex(type, code) {\n      var compareNum = type === 'province' ? 2 : type === 'city' ? 4 : 6;\n      var list = this.getList(type, code.slice(0, compareNum - 2)); // oversea code\n\n      if (code[0] === '9' && type === 'province') {\n        compareNum = 1;\n      }\n\n      code = code.slice(0, compareNum);\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].code.slice(0, compareNum) === code) {\n          return i;\n        }\n      }\n\n      return 0;\n    },\n    onChange: function onChange(picker, values, index) {\n      this.code = values[index].code;\n      this.setValues();\n      this.$emit('change', picker, values, index);\n    },\n    setValues: function setValues() {\n      var code = this.code || Object.keys(this.county)[0] || '';\n      var picker = this.$refs.picker;\n      var province = this.getList('province');\n      var city = this.getList('city', code.slice(0, 2));\n\n      if (!picker) {\n        return;\n      }\n\n      picker.setColumnValues(0, province);\n      picker.setColumnValues(1, city);\n\n      if (city.length && code.slice(2, 4) === '00') {\n        code = city[0].code;\n      }\n\n      picker.setColumnValues(2, this.getList('county', code.slice(0, 4)));\n      picker.setIndexes([this.getIndex('province', code), this.getIndex('city', code), this.getIndex('county', code)]);\n    },\n    getValues: function getValues() {\n      return this.$refs.picker ? this.$refs.picker.getValues().filter(function (value) {\n        return !!value;\n      }) : [];\n    },\n    getArea: function getArea() {\n      var values = this.getValues();\n      var area = {\n        code: '',\n        country: '',\n        province: '',\n        city: '',\n        county: ''\n      };\n\n      if (!values.length) {\n        return area;\n      }\n\n      var names = values.map(function (item) {\n        return item.name;\n      });\n      area.code = values[values.length - 1].code;\n\n      if (area.code[0] === '9') {\n        area.country = names[1] || '';\n        area.province = names[2] || '';\n      } else {\n        area.province = names[0] || '';\n        area.city = names[1] || '';\n        area.county = names[2] || '';\n      }\n\n      return area;\n    },\n    reset: function reset() {\n      this.code = '';\n      this.setValues();\n    }\n  }\n});","export default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          Promise.resolve(value).then(_next, _throw);\n        }\n      }\n\n      function _next(value) {\n        step(\"next\", value);\n      }\n\n      function _throw(err) {\n        step(\"throw\", err);\n      }\n\n      _next();\n    });\n  };\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n","/**\n * Common Picker Props\n */\nexport default {\n  props: {\n    title: String,\n    loading: Boolean,\n    showToolbar: Boolean,\n    cancelButtonText: String,\n    confirmButtonText: String,\n    visibleItemCount: {\n      type: Number,\n      default: 5\n    },\n    itemHeight: {\n      type: Number,\n      default: 44\n    }\n  }\n};","import '../../style/base.css';\nimport '../../picker/index.css';","import deepAssign from './deep-assign';\nexport default function deepClone(obj) {\n  if (Array.isArray(obj)) {\n    return obj.map(function (item) {\n      return deepClone(item);\n    });\n  }\n\n  if (typeof obj === 'object') {\n    return deepAssign({}, obj);\n  }\n\n  return obj;\n}","import create from '../utils/create';\nimport deepClone from '../utils/deep-clone';\nimport { isObj, range } from '../utils';\nvar DEFAULT_DURATION = 200;\nexport default create({\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      class: [_vm.b(), _vm.className],\n      style: _vm.columnStyle,\n      on: {\n        \"touchstart\": _vm.onTouchStart,\n        \"touchmove\": function touchmove($event) {\n          $event.preventDefault();\n          return _vm.onTouchMove($event);\n        },\n        \"touchend\": _vm.onTouchEnd,\n        \"touchcancel\": _vm.onTouchEnd\n      }\n    }, [_c('ul', {\n      style: _vm.wrapperStyle\n    }, _vm._l(_vm.options, function (option, index) {\n      return _c('li', {\n        staticClass: \"van-ellipsis\",\n        class: _vm.b('item', {\n          disabled: _vm.isDisabled(option),\n          selected: index === _vm.currentIndex\n        }),\n        style: _vm.optionStyle,\n        domProps: {\n          \"innerHTML\": _vm._s(_vm.getOptionText(option))\n        },\n        on: {\n          \"click\": function click($event) {\n            _vm.setIndex(index, true);\n          }\n        }\n      });\n    }), 0)]);\n  },\n  name: 'picker-column',\n  props: {\n    valueKey: String,\n    className: String,\n    itemHeight: Number,\n    defaultIndex: Number,\n    initialOptions: Array,\n    visibleItemCount: Number\n  },\n  data: function data() {\n    return {\n      startY: 0,\n      offset: 0,\n      duration: 0,\n      startOffset: 0,\n      options: deepClone(this.initialOptions),\n      currentIndex: this.defaultIndex\n    };\n  },\n  created: function created() {\n    this.$parent.children && this.$parent.children.push(this);\n    this.setIndex(this.currentIndex);\n  },\n  destroyed: function destroyed() {\n    var children = this.$parent.children;\n    children && children.splice(children.indexOf(this), 1);\n  },\n  watch: {\n    defaultIndex: function defaultIndex() {\n      this.setIndex(this.defaultIndex);\n    }\n  },\n  computed: {\n    count: function count() {\n      return this.options.length;\n    },\n    baseOffset: function baseOffset() {\n      return this.itemHeight * (this.visibleItemCount - 1) / 2;\n    },\n    columnStyle: function columnStyle() {\n      return {\n        height: this.itemHeight * this.visibleItemCount + 'px'\n      };\n    },\n    wrapperStyle: function wrapperStyle() {\n      return {\n        transition: this.duration + \"ms\",\n        transform: \"translate3d(0, \" + (this.offset + this.baseOffset) + \"px, 0)\",\n        lineHeight: this.itemHeight + 'px'\n      };\n    },\n    optionStyle: function optionStyle() {\n      return {\n        height: this.itemHeight + 'px'\n      };\n    }\n  },\n  methods: {\n    onTouchStart: function onTouchStart(event) {\n      this.startY = event.touches[0].clientY;\n      this.startOffset = this.offset;\n      this.duration = 0;\n    },\n    onTouchMove: function onTouchMove(event) {\n      var deltaY = event.touches[0].clientY - this.startY;\n      this.offset = range(this.startOffset + deltaY, -(this.count * this.itemHeight), this.itemHeight);\n    },\n    onTouchEnd: function onTouchEnd() {\n      if (this.offset !== this.startOffset) {\n        this.duration = DEFAULT_DURATION;\n        var index = range(Math.round(-this.offset / this.itemHeight), 0, this.count - 1);\n        this.setIndex(index, true);\n      }\n    },\n    adjustIndex: function adjustIndex(index) {\n      index = range(index, 0, this.count);\n\n      for (var i = index; i < this.count; i++) {\n        if (!this.isDisabled(this.options[i])) return i;\n      }\n\n      for (var _i = index - 1; _i >= 0; _i--) {\n        if (!this.isDisabled(this.options[_i])) return _i;\n      }\n    },\n    isDisabled: function isDisabled(option) {\n      return isObj(option) && option.disabled;\n    },\n    getOptionText: function getOptionText(option) {\n      return isObj(option) && this.valueKey in option ? option[this.valueKey] : option;\n    },\n    setIndex: function setIndex(index, userAction) {\n      index = this.adjustIndex(index) || 0;\n      this.offset = -index * this.itemHeight;\n\n      if (index !== this.currentIndex) {\n        this.currentIndex = index;\n        userAction && this.$emit('change', index);\n      }\n    },\n    setValue: function setValue(value) {\n      var options = this.options;\n\n      for (var i = 0; i < options.length; i++) {\n        if (this.getOptionText(options[i]) === value) {\n          return this.setIndex(i);\n        }\n      }\n    },\n    getValue: function getValue() {\n      return this.options[this.currentIndex];\n    }\n  }\n});","import create from '../utils/create';\nimport PickerColumn from './PickerColumn';\nimport deepClone from '../utils/deep-clone';\nimport PickerMixin from '../mixins/picker';\nexport default create({\n  render: function render() {\n    var _vm = this;\n\n    var _h = _vm.$createElement;\n\n    var _c = _vm._self._c || _h;\n\n    return _c('div', {\n      class: _vm.b()\n    }, [_vm.showToolbar ? _c('div', {\n      staticClass: \"van-hairline--top-bottom\",\n      class: _vm.b('toolbar')\n    }, [_vm._t(\"default\", [_c('div', {\n      class: _vm.b('cancel'),\n      on: {\n        \"click\": function click($event) {\n          _vm.emit('cancel');\n        }\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(_vm.cancelButtonText || _vm.$t('cancel')) + \"\\n      \")]), _vm.title ? _c('div', {\n      staticClass: \"van-ellipsis\",\n      class: _vm.b('title'),\n      domProps: {\n        \"textContent\": _vm._s(_vm.title)\n      }\n    }) : _vm._e(), _c('div', {\n      class: _vm.b('confirm'),\n      on: {\n        \"click\": function click($event) {\n          _vm.emit('confirm');\n        }\n      }\n    }, [_vm._v(\"\\n        \" + _vm._s(_vm.confirmButtonText || _vm.$t('confirm')) + \"\\n      \")])])], 2) : _vm._e(), _vm.loading ? _c('div', {\n      class: _vm.b('loading')\n    }, [_c('loading')], 1) : _vm._e(), _c('div', {\n      class: _vm.b('columns'),\n      style: _vm.columnsStyle,\n      on: {\n        \"touchmove\": function touchmove($event) {\n          $event.preventDefault();\n        }\n      }\n    }, [_vm._l(_vm.simple ? [_vm.columns] : _vm.columns, function (item, index) {\n      return _c('picker-column', {\n        key: index,\n        attrs: {\n          \"value-key\": _vm.valueKey,\n          \"initial-options\": _vm.simple ? item : item.values,\n          \"class-name\": item.className,\n          \"default-index\": item.defaultIndex,\n          \"item-height\": _vm.itemHeight,\n          \"visible-item-count\": _vm.visibleItemCount\n        },\n        on: {\n          \"change\": function change($event) {\n            _vm.onChange(index);\n          }\n        }\n      });\n    }), _c('div', {\n      staticClass: \"van-hairline--top-bottom\",\n      class: _vm.b('frame'),\n      style: _vm.frameStyle\n    })], 2)]);\n  },\n  name: 'picker',\n  mixins: [PickerMixin],\n  components: {\n    PickerColumn: PickerColumn\n  },\n  props: {\n    columns: Array,\n    valueKey: {\n      type: String,\n      default: 'text'\n    }\n  },\n  data: function data() {\n    return {\n      children: []\n    };\n  },\n  computed: {\n    frameStyle: function frameStyle() {\n      return {\n        height: this.itemHeight + 'px'\n      };\n    },\n    columnsStyle: function columnsStyle() {\n      return {\n        height: this.itemHeight * this.visibleItemCount + 'px'\n      };\n    },\n    simple: function simple() {\n      return this.columns.length && !this.columns[0].values;\n    }\n  },\n  watch: {\n    columns: function columns() {\n      this.setColumns();\n    }\n  },\n  methods: {\n    setColumns: function setColumns() {\n      var _this = this;\n\n      var columns = this.simple ? [{\n        values: this.columns\n      }] : this.columns;\n      columns.forEach(function (column, index) {\n        _this.setColumnValues(index, deepClone(column.values));\n      });\n    },\n    emit: function emit(event) {\n      if (this.simple) {\n        this.$emit(event, this.getColumnValue(0), this.getColumnIndex(0));\n      } else {\n        this.$emit(event, this.getValues(), this.getIndexes());\n      }\n    },\n    onChange: function onChange(columnIndex) {\n      if (this.simple) {\n        this.$emit('change', this, this.getColumnValue(0), this.getColumnIndex(0));\n      } else {\n        this.$emit('change', this, this.getValues(), columnIndex);\n      }\n    },\n    // get column instance by index\n    getColumn: function getColumn(index) {\n      return this.children[index];\n    },\n    // get column value by index\n    getColumnValue: function getColumnValue(index) {\n      var column = this.getColumn(index);\n      return column && column.getValue();\n    },\n    // set column value by index\n    setColumnValue: function setColumnValue(index, value) {\n      var column = this.getColumn(index);\n      column && column.setValue(value);\n    },\n    // get column option index by column index\n    getColumnIndex: function getColumnIndex(columnIndex) {\n      return (this.getColumn(columnIndex) || {}).currentIndex;\n    },\n    // set column option index by column index\n    setColumnIndex: function setColumnIndex(columnIndex, optionIndex) {\n      var column = this.getColumn(columnIndex);\n      column && column.setIndex(optionIndex);\n    },\n    // get options of column by index\n    getColumnValues: function getColumnValues(index) {\n      return (this.children[index] || {}).options;\n    },\n    // set options of column by index\n    setColumnValues: function setColumnValues(index, options) {\n      var column = this.children[index];\n\n      if (column && JSON.stringify(column.options) !== JSON.stringify(options)) {\n        column.options = options;\n        column.setIndex(0);\n      }\n    },\n    // get values of all columns\n    getValues: function getValues() {\n      return this.children.map(function (child) {\n        return child.getValue();\n      });\n    },\n    // set values of all columns\n    setValues: function setValues(values) {\n      var _this2 = this;\n\n      values.forEach(function (value, index) {\n        _this2.setColumnValue(index, value);\n      });\n    },\n    // get indexes of all columns\n    getIndexes: function getIndexes() {\n      return this.children.map(function (child) {\n        return child.currentIndex;\n      });\n    },\n    // set indexes of all columns\n    setIndexes: function setIndexes(indexes) {\n      var _this3 = this;\n\n      indexes.forEach(function (optionIndex, columnIndex) {\n        _this3.setColumnIndex(columnIndex, optionIndex);\n      });\n    }\n  }\n});"],"sourceRoot":""}